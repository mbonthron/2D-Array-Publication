%% Clear Everything so there are no stragglers
clear; clc; close all

%% Add the Paths to the Required Functions
restoredefaultpath
addpath('..\..\..\General Time Integration Code (MATLAB)\2D Array Functions\')
addpath('2D Array Functions\')
addpath('Shapes Point Data')
addpath('Shapes Rise Data')
addpath('..\..\..\General Time Integration Code (MATLAB)\Visualize\')

%% Create Empty Data Structure to be Populated
data = struct();
data.N_modes = 3;   % Number of modes used to describe the system

%% Load and visualize the node data
run('points_rhombus_chain.m')

% Determine the adjacency matrix & Total Number of Arches
[data] = determine_adjacency_matrix(data);

% Visualize the point and connection between the nodes
plot_grid(data,true);

%% Load and initialize the shape data
run('rise_rhombus_chain_constant')

% Start with elastic deformation
[data] = initialize_chiral(zeros(data.N,1),zeros(data.V,1),data);

% Take a look at the initial condition
plot_system_once(data.A0,data)


%% Prepare for Time Integration
data.beta = 0.002;

T_end = 5000

data.impose_rotation_at(2) = 1;
data.rotation_omega(2) = 0.0013;
data.rotation_mag(2) = 3;

data.impose_rotation_at(3) = 1;
data.rotation_omega(3) = 0.00;
data.rotation_mag(3) = 1.5;

% data.impose_rotation_at(6) = 1;
% data.rotation_omega(6) = 0.0013; 
% data.rotation_mag(6) = 2;
% 
% data.impose_rotation_at(7) = 1;
% data.rotation_omega(7) = 0.0013; 
% data.rotation_mag(7) = 2;

data = determine_coefficient_matrix(data);
data = determine_starting_vals(data);
data = determine_modes_to_skip(data);
data.A0hat = determine_Ahat_from_A(data.A0,data);

%% Run Time Integration
[t,Ahat] = ode45(@(t,A) arbitrary_grid_ODE(t,A,data),[0 5000],data.A0hat);

%% Recover A
A = determine_A_from_Ahat(Ahat,data);

%% Visualize the Results
data.frames = 100;
data.file_name = "b = 0.15";
plot_system_over_time(t,A,data)